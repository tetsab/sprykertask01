"use strict";
(globalThis["webpackJsonp_yves_default"] = globalThis["webpackJsonp_yves_default"] || []).push([["scroll-parallax"],{

/***/ "./src/Pyz/Yves/ShopUi/Theme/default/components/molecules/scroll-parallax/scroll-parallax.ts":
/*!***************************************************************************************************!*\
  !*** ./src/Pyz/Yves/ShopUi/Theme/default/components/molecules/scroll-parallax/scroll-parallax.ts ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ScrollParallax)
/* harmony export */ });
/* harmony import */ var ShopUi_models_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ShopUi/models/component */ "./vendor/spryker-shop/shop-ui/src/SprykerShop/Yves/ShopUi/Theme/default/models/component.ts");

var DIRECTIONS = {
  TOP: 'top',
  DOWN: 'down'
};
var THROTTLE_DURATION = 300;
class ScrollParallax extends ShopUi_models_component__WEBPACK_IMPORTED_MODULE_0__["default"] {
  constructor() {
    super(...arguments);
    this.target = void 0;
    this.wrapper = void 0;
    this.windowHeight = void 0;
    this.windowWidth = void 0;
    this.wrapperHeight = void 0;
    this.distanceToWrapper = void 0;
    this.initialized = false;
  }
  readyCallback() {}
  init() {
    this.wrapper = document.getElementsByClassName(this.wrapperClassName)[0];
    this.target = this.wrapper.getElementsByClassName(this.targetClassName)[0];
    this.defineDimensions();
    this.mapEvents();
  }
  mapEvents() {
    window.addEventListener('resize', () => setTimeout(() => this.defineDimensions(), THROTTLE_DURATION));
    window.addEventListener('scroll', this.checkBreakpointsToScroll.bind(this));
  }
  defineDimensions() {
    this.windowHeight = window.innerHeight;
    this.windowWidth = window.innerWidth;
    this.wrapperHeight = this.wrapper.offsetHeight;
    this.distanceToWrapper = this.getDistanceToWrapper();
  }
  checkBreakpointsToScroll() {
    if (!isNaN(this.minBreakPoint) && !isNaN(this.maxBreakPoint)) {
      if (this.minBreakPoint < this.windowWidth && this.maxBreakPoint > this.windowWidth) {
        this.moveTarget();
        return;
      }
      this.cleanOffset();
    }
  }
  cleanOffset() {
    if (this.initialized) {
      this.initialized = false;
      this.target.removeAttribute('style');
    }
  }
  moveTarget() {
    var scrollHeight = window.scrollY + this.windowHeight;
    var targetOffset = '';
    if (scrollHeight > this.distanceToWrapper) {
      if (this.motionDirection === DIRECTIONS.TOP) {
        targetOffset = "-" + this.getTargetOffset(scrollHeight);
      }
      if (this.motionDirection === DIRECTIONS.DOWN) {
        targetOffset = this.getTargetOffset(scrollHeight);
      }
      if (targetOffset !== '') {
        this.target.style.transform = "translateY(" + targetOffset + ")";
        this.initialized = true;
      }
    }
  }
  getTargetOffset(scrollHeight) {
    return (scrollHeight - this.distanceToWrapper) / this.motionRatio + "px";
  }
  getDistanceToWrapper() {
    var wrapper = this.wrapper;
    var yPosition = 0;
    while (wrapper) {
      yPosition += wrapper.offsetTop - wrapper.scrollTop + wrapper.clientTop;
      wrapper = wrapper.offsetParent;
    }
    return yPosition;
  }
  get wrapperClassName() {
    return this.getAttribute('wrapper-class-name');
  }
  get targetClassName() {
    return this.getAttribute('target-class-name');
  }
  get motionRatio() {
    return +this.getAttribute('motion-ratio');
  }
  get motionDirection() {
    return this.getAttribute('motion-direction');
  }
  get minBreakPoint() {
    return +this.getAttribute('breakpoint-min');
  }
  get maxBreakPoint() {
    return +this.getAttribute('breakpoint-max');
  }
}

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,