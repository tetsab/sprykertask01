"use strict";
(globalThis["webpackJsonp_yves_default"] = globalThis["webpackJsonp_yves_default"] || []).push([["payone-credit-card"],{

/***/ "./vendor/spryker-eco/payone/src/SprykerEco/Yves/Payone/Theme/default/components/molecules/payone-credit-card/payone-credit-card.ts":
/*!******************************************************************************************************************************************!*\
  !*** ./vendor/spryker-eco/payone/src/SprykerEco/Yves/Payone/Theme/default/components/molecules/payone-credit-card/payone-credit-card.ts ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ PayoneCreditCard)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");
/* harmony import */ var ShopUi_models_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ShopUi/models/component */ "./vendor/spryker-shop/shop-ui/src/SprykerShop/Yves/ShopUi/Theme/default/models/component.ts");


/* tslint:disable: no-any */
/* tslint:disable: max-file-line-count */


var CURRENT_PAYMENT_METHOD = 'payoneCreditCard';
var CHECK_CALLBACK_ID = 'checkCallback';
var CHECK_CALLBACK_VALID_RESPONSE_STATUS = 'VALID';

// configuration for Hosted Iframe.
// https://github.com/fjbender/simple-php-integration#build-the-form
var defaultHostedIFramesConfig = {
  fields: {
    cardtype: {
      selector: 'cardtype',
      cardtypes: ['V', 'M']
    },
    cardpan: {
      selector: 'cardpan',
      type: 'text'
    },
    cardcvc2: {
      selector: 'cardcvc2',
      type: 'password',
      size: '3',
      maxlength: '3',
      length: {
        V: 3,
        M: 3
      }
    },
    cardexpiremonth: {
      selector: 'cardexpiremonth',
      type: 'select',
      size: '2',
      maxlength: '2',
      iframe: {
        width: '100%'
      }
    },
    cardexpireyear: {
      selector: 'cardexpireyear',
      type: 'select',
      iframe: {
        width: '100%'
      }
    }
  },
  defaultStyle: {
    input: "font-size: 0.875em; height: 2rem; width: 100%; border: 0; outline: 1px solid #dadada; outline-offset: -1px;",
    select: "font-size: 0.875em; height: 2rem; width: 100%; border: 0; outline: 1px solid #dadada; outline-offset: -1px; background-color: #fefefe;",
    iframe: {
      height: '35px',
      width: '100%'
    }
  },
  error: 'errorOutput'
};
class PayoneCreditCard extends ShopUi_models_component__WEBPACK_IMPORTED_MODULE_2__["default"] {
  constructor() {
    super(...arguments);
    this.scriptLoader = void 0;
    this.form = void 0;
    this.hostedIFramesApi = void 0;
    this.cardTypeInput = void 0;
    this.cardHolderInput = void 0;
    this.clientApiConfigInput = void 0;
    this.languageInput = void 0;
    this.pseudoCardPanInput = void 0;
    this.errorElement = void 0;
    this.isPaymentValid = false;
    this.submitButton = void 0;
  }
  readyCallback() {}
  init() {
    this.scriptLoader = this.querySelector('script-loader');
    this.form = document.querySelector(this.formSelector);
    this.cardHolderInput = this.querySelector(this.cardHolderSelector);
    this.clientApiConfigInput = this.querySelector(this.clientApiConfigSelector);
    this.languageInput = this.querySelector(this.languageSelector);
    this.pseudoCardPanInput = this.querySelector(this.pseudoCardPanSelector);
    this.errorElement = this.querySelector(this.errorContainer);
    this.submitButton = Array.from(document.getElementsByClassName(this.jsName + "__submit"));
    this.mapEvents();
  }
  mapEvents() {
    this.scriptLoader.addEventListener('scriptload', event => this.onScriptLoad(event));
    this.form.addEventListener('submit', event => this.onSubmit(event));
  }
  onScriptLoad(event) {
    this.addCheckCallbackToGlobalScope();
    this.loadPayoneIFrame();
  }
  onSubmit(event) {
    if (!this.isCurrentPaymentMethod) {
      return;
    }
    event.preventDefault();
    if (this.isPaymentValid) {
      this.form.submit();
    }
    this.checkCreditCard();
  }
  addCheckCallbackToGlobalScope() {
    window[CHECK_CALLBACK_ID] = this.checkCallback.bind(this);
  }
  checkCallback(response) {
    var _this = this;
    return (0,_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])(function* () {
      if (response.status !== CHECK_CALLBACK_VALID_RESPONSE_STATUS) {
        setTimeout(() => _this.enableSubmit(), 0);
        return;
      }
      _this.pseudoCardPanInput.value = yield Promise.resolve(response.pseudocardpan);
      _this.setPaymentToValid();
      _this.form.submit();
    })();
  }
  checkCreditCard() {
    if (this.hostedIFramesApi.isComplete() && this.cardHolderInput.value) {
      this.hostedIFramesApi.creditCardCheck(CHECK_CALLBACK_ID);
      return;
    }
    this.errorElement.innerHTML = this.hostedIFramesConfig.language.transactionRejected;
    setTimeout(() => this.enableSubmit(), 0);
  }
  enableSubmit() {
    if (this.submitButton.length) {
      this.submitButton.forEach(button => {
        button.removeAttribute('disabled');
      });
      return;
    }
    var buttons = Array.from(this.form.getElementsByTagName('button'));
    buttons.forEach(button => {
      button.removeAttribute('disabled');
    });
  }
  loadPayoneIFrame() {
    this.hostedIFramesApi = new Payone.ClientApi.HostedIFrames(this.hostedIFramesConfig, this.clientApiConfig);
    Payone.ClientApi.Language.de.placeholders.cardpan = '_ _ _ _  _ _ _ _  _ _ _ _  _ _ _ _';
    Payone.ClientApi.Language.de.placeholders.cvc = '• • •';
  }
  setPaymentToValid() {
    this.isPaymentValid = true;
  }
  get isCurrentPaymentMethod() {
    var currentPaymentMethodInput = document.querySelector(this.currentPaymentMethodSelector);
    return currentPaymentMethodInput != null && currentPaymentMethodInput.value ? currentPaymentMethodInput.value === CURRENT_PAYMENT_METHOD : null;
  }
  get language() {
    var languageCodeLenght = 2;
    var languageCode = !!this.languageInput.value ? this.languageInput.value.substr(0, languageCodeLenght) : 'de';
    return Payone.ClientApi.Language[languageCode] || Payone.ClientApi.Language.de;
  }
  get hostedIFramesConfig() {
    return (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, defaultHostedIFramesConfig, {
      language: this.language
    });
  }
  get clientApiConfig() {
    return JSON.parse(this.clientApiConfigInput.value);
  }
  get formSelector() {
    return this.getAttribute('form-selector');
  }
  get clientApiConfigSelector() {
    return this.getAttribute('client-api-config-selector');
  }
  get languageSelector() {
    return this.getAttribute('language-selector');
  }
  get cardTypeSelector() {
    return this.getAttribute('card-type-selector');
  }
  get cardHolderSelector() {
    return this.getAttribute('card-holder-selector');
  }
  get pseudoCardPanSelector() {
    return this.getAttribute('pseudo-card-pan-selector');
  }
  get errorContainer() {
    return this.getAttribute('error-container-selector');
  }
  get currentPaymentMethodSelector() {
    return this.getAttribute('current-payment-method-selector');
  }
}

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,